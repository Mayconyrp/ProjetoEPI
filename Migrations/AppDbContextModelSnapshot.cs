// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoEPI.Context;

#nullable disable

namespace ProjetoEPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Projeto_DetectEPI.Models.Adm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.CanteiroDeObra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("CanteirosDeObra");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Empresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Funcionario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CanteiroDeObraID")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CanteiroDeObraID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Notificacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AdministradorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int>("ReconhecimentoFacialID")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AdministradorID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ReconhecimentoFacialID");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.ReconhecimentoEPI", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CanteiroID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<bool>("UsoEPI")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("CanteiroID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("ReconhecimentosEPI");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Adm", b =>
                {
                    b.HasOne("Projeto_DetectEPI.Models.Empresa", "Empresa")
                        .WithMany("Administradores")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.CanteiroDeObra", b =>
                {
                    b.HasOne("Projeto_DetectEPI.Models.Empresa", "Empresa")
                        .WithMany("CanteirosDeObra")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Funcionario", b =>
                {
                    b.HasOne("Projeto_DetectEPI.Models.CanteiroDeObra", "CanteiroDeObra")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CanteiroDeObraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_DetectEPI.Models.Empresa", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("EmpresaID");

                    b.Navigation("CanteiroDeObra");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Notificacao", b =>
                {
                    b.HasOne("Projeto_DetectEPI.Models.Adm", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_DetectEPI.Models.Empresa", "Empresa")
                        .WithMany("Notificacoes")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_DetectEPI.Models.ReconhecimentoEPI", "ReconhecimentoFacial")
                        .WithMany()
                        .HasForeignKey("ReconhecimentoFacialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Empresa");

                    b.Navigation("ReconhecimentoFacial");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.ReconhecimentoEPI", b =>
                {
                    b.HasOne("Projeto_DetectEPI.Models.CanteiroDeObra", "Canteiro")
                        .WithMany("ReconhecimentosEPI")
                        .HasForeignKey("CanteiroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_DetectEPI.Models.Funcionario", "Funcionario")
                        .WithMany("ReconhecimentosEPI")
                        .HasForeignKey("FuncionarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteiro");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.CanteiroDeObra", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("ReconhecimentosEPI");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Empresa", b =>
                {
                    b.Navigation("Administradores");

                    b.Navigation("CanteirosDeObra");

                    b.Navigation("Funcionarios");

                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("Projeto_DetectEPI.Models.Funcionario", b =>
                {
                    b.Navigation("ReconhecimentosEPI");
                });
#pragma warning restore 612, 618
        }
    }
}
